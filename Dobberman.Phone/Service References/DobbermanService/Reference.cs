//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.261
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace TAUP2C.Dobberman.Phone.DobbermanService {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Report", Namespace="http://schemas.datacontract.org/2004/07/TAUP2C.Dobberman.Web.Services")]
    public partial class Report : object, System.ComponentModel.INotifyPropertyChanged {
        
        private TAUP2C.Dobberman.Phone.DobbermanService.Authority AuthorityField;
        
        private string LocationField;
        
        private string MoodField;
        
        private byte[] PhotoField;
        
        private string ReportDescriptionField;
        
        private int ReportIdField;
        
        private TAUP2C.Dobberman.Phone.DobbermanService.User UserField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TAUP2C.Dobberman.Phone.DobbermanService.Authority Authority {
            get {
                return this.AuthorityField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorityField, value) != true)) {
                    this.AuthorityField = value;
                    this.RaisePropertyChanged("Authority");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Location {
            get {
                return this.LocationField;
            }
            set {
                if ((object.ReferenceEquals(this.LocationField, value) != true)) {
                    this.LocationField = value;
                    this.RaisePropertyChanged("Location");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mood {
            get {
                return this.MoodField;
            }
            set {
                if ((object.ReferenceEquals(this.MoodField, value) != true)) {
                    this.MoodField = value;
                    this.RaisePropertyChanged("Mood");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Photo {
            get {
                return this.PhotoField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoField, value) != true)) {
                    this.PhotoField = value;
                    this.RaisePropertyChanged("Photo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ReportDescription {
            get {
                return this.ReportDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ReportDescriptionField, value) != true)) {
                    this.ReportDescriptionField = value;
                    this.RaisePropertyChanged("ReportDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ReportId {
            get {
                return this.ReportIdField;
            }
            set {
                if ((this.ReportIdField.Equals(value) != true)) {
                    this.ReportIdField = value;
                    this.RaisePropertyChanged("ReportId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TAUP2C.Dobberman.Phone.DobbermanService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Authority", Namespace="http://schemas.datacontract.org/2004/07/TAUP2C.Dobberman.Web.Services")]
    public partial class Authority : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int AuthorityIdField;
        
        private string FacebookPageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AuthorityId {
            get {
                return this.AuthorityIdField;
            }
            set {
                if ((this.AuthorityIdField.Equals(value) != true)) {
                    this.AuthorityIdField = value;
                    this.RaisePropertyChanged("AuthorityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FacebookPage {
            get {
                return this.FacebookPageField;
            }
            set {
                if ((object.ReferenceEquals(this.FacebookPageField, value) != true)) {
                    this.FacebookPageField = value;
                    this.RaisePropertyChanged("FacebookPage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/TAUP2C.Dobberman.Web.Services")]
    public partial class User : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string UserIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((object.ReferenceEquals(this.UserIdField, value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="DobbermanService.IDobbermanService")]
    public interface IDobbermanService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IDobbermanService/GetReportById", ReplyAction="http://tempuri.org/IDobbermanService/GetReportByIdResponse")]
        System.IAsyncResult BeginGetReportById(string userId, System.AsyncCallback callback, object asyncState);
        
        TAUP2C.Dobberman.Phone.DobbermanService.Report EndGetReportById(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDobbermanServiceChannel : TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetReportByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetReportByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public TAUP2C.Dobberman.Phone.DobbermanService.Report Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((TAUP2C.Dobberman.Phone.DobbermanService.Report)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DobbermanServiceClient : System.ServiceModel.ClientBase<TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService>, TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService {
        
        private BeginOperationDelegate onBeginGetReportByIdDelegate;
        
        private EndOperationDelegate onEndGetReportByIdDelegate;
        
        private System.Threading.SendOrPostCallback onGetReportByIdCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public DobbermanServiceClient() {
        }
        
        public DobbermanServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DobbermanServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DobbermanServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DobbermanServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetReportByIdCompletedEventArgs> GetReportByIdCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService.BeginGetReportById(string userId, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetReportById(userId, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        TAUP2C.Dobberman.Phone.DobbermanService.Report TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService.EndGetReportById(System.IAsyncResult result) {
            return base.Channel.EndGetReportById(result);
        }
        
        private System.IAsyncResult OnBeginGetReportById(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string userId = ((string)(inValues[0]));
            return ((TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService)(this)).BeginGetReportById(userId, callback, asyncState);
        }
        
        private object[] OnEndGetReportById(System.IAsyncResult result) {
            TAUP2C.Dobberman.Phone.DobbermanService.Report retVal = ((TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService)(this)).EndGetReportById(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetReportByIdCompleted(object state) {
            if ((this.GetReportByIdCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetReportByIdCompleted(this, new GetReportByIdCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetReportByIdAsync(string userId) {
            this.GetReportByIdAsync(userId, null);
        }
        
        public void GetReportByIdAsync(string userId, object userState) {
            if ((this.onBeginGetReportByIdDelegate == null)) {
                this.onBeginGetReportByIdDelegate = new BeginOperationDelegate(this.OnBeginGetReportById);
            }
            if ((this.onEndGetReportByIdDelegate == null)) {
                this.onEndGetReportByIdDelegate = new EndOperationDelegate(this.OnEndGetReportById);
            }
            if ((this.onGetReportByIdCompletedDelegate == null)) {
                this.onGetReportByIdCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetReportByIdCompleted);
            }
            base.InvokeAsync(this.onBeginGetReportByIdDelegate, new object[] {
                        userId}, this.onEndGetReportByIdDelegate, this.onGetReportByIdCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService CreateChannel() {
            return new DobbermanServiceClientChannel(this);
        }
        
        private class DobbermanServiceClientChannel : ChannelBase<TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService>, TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService {
            
            public DobbermanServiceClientChannel(System.ServiceModel.ClientBase<TAUP2C.Dobberman.Phone.DobbermanService.IDobbermanService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetReportById(string userId, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = userId;
                System.IAsyncResult _result = base.BeginInvoke("GetReportById", _args, callback, asyncState);
                return _result;
            }
            
            public TAUP2C.Dobberman.Phone.DobbermanService.Report EndGetReportById(System.IAsyncResult result) {
                object[] _args = new object[0];
                TAUP2C.Dobberman.Phone.DobbermanService.Report _result = ((TAUP2C.Dobberman.Phone.DobbermanService.Report)(base.EndInvoke("GetReportById", _args, result)));
                return _result;
            }
        }
    }
}
